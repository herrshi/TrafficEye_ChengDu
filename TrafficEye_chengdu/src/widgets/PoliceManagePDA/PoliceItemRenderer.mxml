<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:supportClasses="com.esri.ags.skins.supportClasses.*"
				minHeight="30" 
				autoDrawBackground="false" 
				dataChange="itemrenderer_dataChangeHandler(event)"
				click="itemrenderer_clickHandler(event)"
				mouseOut="itemrenderer_mouseOutHandler(event)"
				mouseOver="itemrenderer_mouseOverHandler(event)">
	
	<fx:Script>
		<![CDATA[
			
			import mx.events.FlexEvent;
			
			[Bindable] private var _policePoint:PolicePoint
			
			private const QUERY_RESULT_CLICK:String = "queryResultClick";
			
			private const QUERY_RESULT_MOUSE_OVER:String = "queryResultMouseOver";
			
			private const QUERY_RESULT_MOUSE_OUT:String = "queryResultMouseOut";
			
			protected function itemrenderer_dataChangeHandler(event:FlexEvent):void
			{
				_policePoint = data as PolicePoint;
				lblPolice.text = _policePoint.title + ' ' + _policePoint.policeInfo.deptName + '-' + 
					_policePoint.policeInfo.teamName;
			}
			
			private function itemrenderer_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event(QUERY_RESULT_CLICK, true)); // bubbles
			}
			
			private function itemrenderer_mouseOverHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event(QUERY_RESULT_MOUSE_OVER, true)); // bubbles
			}
			
			private function itemrenderer_mouseOutHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event(QUERY_RESULT_MOUSE_OUT, true)); // bubbles
			}
			
			private function showLink(event:MouseEvent):void
			{
				event.stopImmediatePropagation(); // don't dispatch QUERY_RESULT_CLICK since we don't want to zoom to feature
				navigateToURL(new URLRequest(_policePoint.link));
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
	</s:states>
	
	<!-- border/background rectangle -->
	<s:Rect left="0" right="0" top="0" bottom="0"
			radiusX="4"
			radiusY="4">
		<s:stroke>
			<mx:SolidColorStroke alpha="{getStyle('borderAlpha')}"
								 color="{getStyle('borderColor')}"
								 weight="1"/>
		</s:stroke>
		<s:fill>
			<s:SolidColor alpha="0.3"
						  alpha.hovered="0.8"
						  color.hovered="{getStyle('rollOverColor')}"
						  color.normal="{getStyle('contentBackgroundColor')}"/>
		</s:fill>
	</s:Rect>
	
	<s:HGroup width="100%" height="100%"
			  paddingBottom="3"
			  paddingLeft="3"
			  paddingRight="3"
			  paddingTop="3"
			  verticalAlign="middle">
		<!--<mx:UIComponent id="resultIcon"
						width="100%" height="100%"
						maxHeight="20"
						maxWidth="20">
			<mx:filters>
				<mx:GlowFilter alpha="0.5"
							   blurX="10"
							   blurY="10"
							   color="#000000"/>
			</mx:filters>
		</mx:UIComponent>-->
		<s:CheckBox id="chkPolice" selected="true" visible="false" includeInLayout="false"/>
		<!--<mx:Image width="18" height="18"
			source="{_policePoint.symbol}"/>-->
		<s:VGroup width="100%" height="100%"
				  verticalAlign="middle">
			<s:Label id="lblPolice" width="100%"
					 fontWeight="bold"
					 maxDisplayedLines="-1"/>
			<!--<s:Label width="100%"
					fontWeight="normal"
					maxDisplayedLines="-1"
					text="{_policePoint.content}"/>-->
		</s:VGroup>
		
	</s:HGroup>
</s:ItemRenderer>
